import tkinter as tk
from tkinter import Menu, Text
from solver_method import solve_fitness

def paste_from_clipboard(event, entry_widget):
    # Check if the event was generated by the keyboard shortcut
    if event.widget == entry_widget:
        entry_widget.event_generate('<<Paste>>')
    return "break"

def copy_to_clipboard(event, entry_widget):
    entry_widget.event_generate('<<Copy>>')

def cut_to_clipboard(event, entry_widget):
    entry_widget.event_generate('<<Cut>>')

# Function to create context menu for widgets
def create_context_menu(widget):
    context_menu = Menu(window, tearoff=0)
    context_menu.add_command(label="Copy", command=lambda: widget.event_generate('<<Copy>>'))
    context_menu.add_command(label="Cut", command=lambda: widget.event_generate('<<Cut>>'))
    context_menu.add_command(label="Paste", command=lambda: widget.event_generate('<<Paste>>'))
    widget.bind("<Button-3>", lambda event: context_menu.post(event.x_root, event.y_root))
    widget.bind("<Control-c>", lambda event: widget.event_generate('<<Copy>>'))
    widget.bind("<Control-x>", lambda event: widget.event_generate('<<Cut>>'))
    widget.bind("<Control-v>", lambda event: paste_from_clipboard(event, widget))

# Create the main window
window = tk.Tk()
window.title("Fitness Solver")
window.geometry("650x450")

# Create and place widgets
label_main = tk.Label(window, text="Main Equation:", font=("Arial", 12))
label_main.pack(pady=5)

main_equation = tk.Entry(window, width=30, font=("Arial", 11))
main_equation.insert(0, "y+d-(x**2)/4")  # Set default value
main_equation.pack(pady=5)

label_exact = tk.Label(window, text="Exact Equation:", font=("Arial", 12))
label_exact.pack(pady=5)

exact_equation = tk.Entry(window, width=40, font=("Arial", 11))
exact_equation.insert(0, "1/4*x**2-1/2*x+1/2")  # Set default value
exact_equation.pack(pady=5)

label_initial_x = tk.Label(window, text="Initial Condition:", font=("Arial", 12))
label_initial_x.pack(pady=5)

initial_value = tk.Entry(window, width=10, font=("Arial", 11))
initial_value.insert(0, "0")  # Set default value
initial_value.pack(pady=5)

# Add context menu for all input fields
create_context_menu(main_equation)
create_context_menu(exact_equation)
create_context_menu(initial_value)

# Bind Enter key to solve_derivative
exact_equation.bind("<Return>", lambda event: solve_fitness(main_equation, exact_equation, initial_value, result_label, replaced_text))

solve_button = tk.Button(window, text="Solve Fitness", command=lambda: solve_fitness(main_equation, exact_equation, initial_value, result_label, replaced_text), font=("Arial", 12))
solve_button.pack(pady=5)

result_label = tk.Label(window, text="", font=("Arial", 12))
result_label.pack(pady=5)

# Create Text widget for displaying the new equation
replaced_text = Text(window, height=5, width=70, wrap=tk.WORD, font=("Arial", 12))
replaced_text.pack(pady=5)

# Add context menu for replaced_text
create_context_menu(replaced_text)

# Start the Tkinter event loop
window.mainloop()
